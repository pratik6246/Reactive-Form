{"version":3,"sources":["./src/app/hello.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/polyfills.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello',\n  template: `<h1>Hello {{name}}!</h1>`,\n  styles: [`h1 { font-family:sans-serif; }`]\n})\nexport class HelloComponent  {\n  @Input() name: string;\n}\n","export default \"label {\\n  padding: 10px;\\n}\\ninput {\\n  padding: 5px;\\n  margin: 5px;\\n}\\nth {\\n  background-color: red;\\n  color: white;\\n  padding: 10px;\\n}\\ntd {\\n  padding: 5px;\\n}\\nbutton {\\n  padding: 15px;\\n  margin: 8px;\\n}\\n#add{\\n  color: blue;\\n}\\n#del{\\n  padding: 2px;\\n  color: red;\\n}\\n#edi{\\n  padding: 2px;\\n  color: blue;\\n}\\n#cancel{\\n  color: red;\\n}\\n#done{\\n  color: rgb(34, 136, 225);\\n\\n}\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxZQUFZO0VBQ1osV0FBVztBQUNiO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGFBQWE7QUFDZjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsV0FBVztBQUNiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLFlBQVk7RUFDWixVQUFVO0FBQ1o7QUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXO0FBQ2I7QUFDQTtFQUNFLFVBQVU7QUFDWjtBQUNBO0VBQ0Usd0JBQXdCOztBQUUxQjtBQUNBOztFQUVFLHdCQUF3QjtFQUN4QixTQUFTO0FBQ1giLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pbnB1dCB7XG4gIHBhZGRpbmc6IDVweDtcbiAgbWFyZ2luOiA1cHg7XG59XG50aCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAxMHB4O1xufVxudGQge1xuICBwYWRkaW5nOiA1cHg7XG59XG5idXR0b24ge1xuICBwYWRkaW5nOiAxNXB4O1xuICBtYXJnaW46IDhweDtcbn1cbiNhZGR7XG4gIGNvbG9yOiBibHVlO1xufVxuI2RlbHtcbiAgcGFkZGluZzogMnB4O1xuICBjb2xvcjogcmVkO1xufVxuI2VkaXtcbiAgcGFkZGluZzogMnB4O1xuICBjb2xvcjogYmx1ZTtcbn1cbiNjYW5jZWx7XG4gIGNvbG9yOiByZWQ7XG59XG4jZG9uZXtcbiAgY29sb3I6IHJnYigzNCwgMTM2LCAyMjUpO1xuXG59XG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG4iXX0= */\";","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Reactive form';\n  submitted: boolean = false;\n  add_form: boolean = true;\n  registerForm: FormGroup;\n  registeredUsers: any = [];\n  editedUser: any = {};\n\n  constructor(private fb: FormBuilder) {\n    this.registeredUsers = [\n      {\n        id: 'P1',\n        firstName: 'Revati',\n        lastName: 'Kumari',\n        email: 'krevati@gmail.com',\n        phone: '8976543210',\n        company: 'Nike',\n        gender: 'female',\n        dob: '14-03-1991',\n        password: '123456r',\n        confirmPassword: '123456r'\n      },\n      {\n        id: 'P2',\n        firstName: 'sourav',\n        lastName: 'sen',\n        email: 'sen@gmail.com',\n        phone: '1234567890',\n        company: 'google',\n        gender: 'male',\n        dob: '03-09-1999',\n        password: '123456s',\n        confirmPassword: '123456s'\n      },\n      {\n        id: 'P3',\n        firstName: 'pratik',\n        lastName: 'Kumar',\n        email: 'pratik@gmail.com',\n        phone: '9876543210',\n        company: 'Keeno',\n        gender: 'male',\n        dob: '17-05-1889',\n        password: '123456p',\n        confirmPassword: '123456p'\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(/[0-9]{10}/g)]],\n      company: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  get formValues() {\n    return this.registerForm.controls;\n  }\n\n  addUser() {\n    this.add_form = true;\n    this.editedUser = {};\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n  submitForm() {\n    this.submitted = true;\n    console.log(this.registerForm);\n    console.log(this.formValues);\n    // console.log(this.registerForm.value);\n    if (this.registerForm.invalid) {\n      return;\n    }\n    if (this.add_form) {\n      let newUser: any = this.registerForm.value;\n      let dob_pass = this.registerForm.value.dob.split('-');\n      let newId = `DOB_${dob_pass[2]}${dob_pass[1]}`;\n      console.log(newId);\n      newUser.id = newId;\n      this.registeredUsers.push(newUser);\n    } else if (this.editedUser) {\n      let userIndex = this.registeredUsers.findIndex(\n        item => item.id === this.editedUser.id\n      );\n      if (userIndex != -1) {\n        this.registeredUsers[userIndex] = this.registerForm.value;\n      }\n    }\n    this.add_form = true;\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n  editUser(editUser, i) {\n    this.add_form = false;\n    console.log(editUser);\n    this.editedUser = editUser;\n    this.registerForm.patchValue({\n      firstName: editUser.firstName,\n      lastName: editUser.lastName,\n      email: editUser.email,\n      phone: editUser.phone,\n      company: editUser.company,\n      gender: editUser.gender,\n      dob: editUser.dob,\n      password: editUser.password,\n      confirmPassword: editUser.confirmPassword\n    });\n  }\n\n  deleteUser(user) {\n    this.registeredUsers = this.registeredUsers.filter(\n      item => item.id != user.id\n    );\n    this.add_form = true;\n    this.registerForm.reset();\n  }\n\n  cancelForm() {\n    this.add_form = true;\n    this.registerForm.reset();\n    this.editedUser = {};\n  }\n\n  changeVal1(eve) {\n    console.log(eve);\n  }\n\n  changeVal2(eve) {\n    console.log(eve);\n  }\n}\n","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">{{name}}</div>\\n  <div *ngIf=\\\"add_form\\\">\\n    <button id=\\\"add\\\" (click)=\\\"addUser()\\\">Add User</button>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"registerForm\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>First Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.firstName.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.firstName.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.firstName.errors.required\\\">First Name is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Last Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.lastName.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.lastName.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.lastName.errors.required\\\">Last Name is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" [email]=\\\"true\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.email.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.email.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.email.errors.required\\\">Email is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.email.errors.email\\\">Enter a valid email</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Phone</label>\\n        <input type=\\\"number\\\" formControlName=\\\"phone\\\" minlength=\\\"10\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.phone.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.phone.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.phone.errors.required\\\">Phone is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.phone.errors.pattern\\\">Phone is invalid</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Company</label>\\n        <input type=\\\"text\\\" formControlName=\\\"company\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.company.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.company.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.company.errors.required\\\">Company is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Gender</label>\\n        <div>\\n          <input id=\\\"male\\\" type=\\\"radio\\\" value=\\\"male\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n          <label for=\\\"male\\\">Male</label>\\n        </div>\\n        <div>\\n          <input id=\\\"female\\\" type=\\\"radio\\\" value=\\\"female\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n          <label for=\\\"female\\\">Female</label>\\n        </div>\\n        <div *ngIf=\\\"submitted && formValues.gender.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.gender.errors.required\\\">Gender is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>DOB</label>\\n        <input type=\\\"date\\\" formControlName=\\\"dob\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.dob.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.dob.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.dob.errors.required\\\">DOB is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" (blur)=\\\"changeVal2($event.target.value)\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.password.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.password.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.password.errors.required\\\">Password is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Confirm Fassword</label>\\n        <input type=\\\"password\\\" (input)=\\\"changeVal1($event.target.value)\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.confirmPassword.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.confirmPassword.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.confirmPassword.errors.required\\\">Confirm Password\\n            is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.confirmPassword.errors.mismatch\\\">Password and\\n            Confirm password are not matched</div>\\n        </div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button id=\\\"done\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitForm()\\\">{{add_form ? 'Register' : 'Update'}}</button>\\n        <button id=\\\"Cancel\\\" (click)=\\\"cancelForm()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div *ngIf=\\\"registeredUsers.length > 0\\\">\\n    <table>\\n      <tr>\\n        <th>First name</th>\\n        <th>Last name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Company</th>\\n        <th>DOB</th>\\n        <th>Edit</th>\\n        <th>Delete</th>\\n      </tr>\\n      <tr *ngFor=\\\"let user of registeredUsers; let i=index;\\\">\\n        <td>{{ user.firstName }}</td>\\n        <td>{{ user.lastName }}</td>\\n        <td>{{ user.email }}</td>\\n        <td>{{ user.phone }}</td>\\n        <td>{{ user.company }}</td>\\n        <td>{{ user.dob }}</td>\\n        <td>\\n          <button id=\\\"edi\\\" (click)=\\\"editUser(user)\\\">Edit</button>\\n        </td>\\n        <td>\\n          <button id=\\\"del\\\" (click)=\\\"deleteUser(user)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HelloComponent } from './hello.component';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule],\n  declarations: [AppComponent, HelloComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  \n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  \n}).catch(err => console.error(err));"],"sourceRoot":"webpack:///"}