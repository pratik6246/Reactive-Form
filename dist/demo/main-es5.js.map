{"version":3,"sources":["webpack:///src/app/hello.component.ts","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/polyfills.ts","webpack:///src/main.ts"],"names":["HelloComponent","selector","template","AppComponent","fb","name","submitted","add_form","registeredUsers","editedUser","id","firstName","lastName","email","phone","company","gender","dob","password","confirmPassword","registerForm","group","required","pattern","controls","reset","console","log","formValues","invalid","newUser","value","dob_pass","split","newId","push","userIndex","findIndex","item","editUser","i","patchValue","user","filter","eve","AppModule","imports","declarations","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","bootstrapModule","ref","window","destroy","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello',\n  template: `<h1>Hello {{name}}!</h1>`,\n  styles: [`h1 { font-family:sans-serif; }`]\n})\nexport class HelloComponent  {\n  @Input() name: string;\n}\n","export default \"label {\\n  padding: 10px;\\n}\\ninput {\\n  padding: 5px;\\n  margin: 5px;\\n}\\nth {\\n  background-color: red;\\n  color: white;\\n  padding: 10px;\\n}\\ntd {\\n  padding: 5px;\\n}\\nbutton {\\n  padding: 15px;\\n  margin: 8px;\\n}\\n#add{\\n  color: blue;\\n}\\n#del{\\n  padding: 2px;\\n  color: red;\\n}\\n#edi{\\n  padding: 2px;\\n  color: blue;\\n}\\n#cancel{\\n  color: red;\\n}\\n#done{\\n  color: rgb(34, 136, 225);\\n\\n}\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxZQUFZO0VBQ1osV0FBVztBQUNiO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGFBQWE7QUFDZjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsV0FBVztBQUNiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLFlBQVk7RUFDWixVQUFVO0FBQ1o7QUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXO0FBQ2I7QUFDQTtFQUNFLFVBQVU7QUFDWjtBQUNBO0VBQ0Usd0JBQXdCOztBQUUxQjtBQUNBOztFQUVFLHdCQUF3QjtFQUN4QixTQUFTO0FBQ1giLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5pbnB1dCB7XG4gIHBhZGRpbmc6IDVweDtcbiAgbWFyZ2luOiA1cHg7XG59XG50aCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAxMHB4O1xufVxudGQge1xuICBwYWRkaW5nOiA1cHg7XG59XG5idXR0b24ge1xuICBwYWRkaW5nOiAxNXB4O1xuICBtYXJnaW46IDhweDtcbn1cbiNhZGR7XG4gIGNvbG9yOiBibHVlO1xufVxuI2RlbHtcbiAgcGFkZGluZzogMnB4O1xuICBjb2xvcjogcmVkO1xufVxuI2VkaXtcbiAgcGFkZGluZzogMnB4O1xuICBjb2xvcjogYmx1ZTtcbn1cbiNjYW5jZWx7XG4gIGNvbG9yOiByZWQ7XG59XG4jZG9uZXtcbiAgY29sb3I6IHJnYigzNCwgMTM2LCAyMjUpO1xuXG59XG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG4iXX0= */\";","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Reactive form';\n  submitted: boolean = false;\n  add_form: boolean = true;\n  registerForm: FormGroup;\n  registeredUsers: any = [];\n  editedUser: any = {};\n\n  constructor(private fb: FormBuilder) {\n    this.registeredUsers = [\n      {\n        id: 'P1',\n        firstName: 'Revati',\n        lastName: 'Kumari',\n        email: 'krevati@gmail.com',\n        phone: '8976543210',\n        company: 'Nike',\n        gender: 'female',\n        dob: '14-03-1991',\n        password: '123456r',\n        confirmPassword: '123456r'\n      },\n      {\n        id: 'P2',\n        firstName: 'sourav',\n        lastName: 'sen',\n        email: 'sen@gmail.com',\n        phone: '1234567890',\n        company: 'google',\n        gender: 'male',\n        dob: '03-09-1999',\n        password: '123456s',\n        confirmPassword: '123456s'\n      },\n      {\n        id: 'P3',\n        firstName: 'pratik',\n        lastName: 'Kumar',\n        email: 'pratik@gmail.com',\n        phone: '9876543210',\n        company: 'Keeno',\n        gender: 'male',\n        dob: '17-05-1889',\n        password: '123456p',\n        confirmPassword: '123456p'\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(/[0-9]{10}/g)]],\n      company: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  get formValues() {\n    return this.registerForm.controls;\n  }\n\n  addUser() {\n    this.add_form = true;\n    this.editedUser = {};\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n  submitForm() {\n    this.submitted = true;\n    console.log(this.registerForm);\n    console.log(this.formValues);\n    // console.log(this.registerForm.value);\n    if (this.registerForm.invalid) {\n      return;\n    }\n    if (this.add_form) {\n      let newUser: any = this.registerForm.value;\n      let dob_pass = this.registerForm.value.dob.split('-');\n      let newId = `DOB_${dob_pass[2]}${dob_pass[1]}`;\n      console.log(newId);\n      newUser.id = newId;\n      this.registeredUsers.push(newUser);\n    } else if (this.editedUser) {\n      let userIndex = this.registeredUsers.findIndex(\n        item => item.id === this.editedUser.id\n      );\n      if (userIndex != -1) {\n        this.registeredUsers[userIndex] = this.registerForm.value;\n      }\n    }\n    this.add_form = true;\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n  editUser(editUser, i) {\n    this.add_form = false;\n    console.log(editUser);\n    this.editedUser = editUser;\n    this.registerForm.patchValue({\n      firstName: editUser.firstName,\n      lastName: editUser.lastName,\n      email: editUser.email,\n      phone: editUser.phone,\n      company: editUser.company,\n      gender: editUser.gender,\n      dob: editUser.dob,\n      password: editUser.password,\n      confirmPassword: editUser.confirmPassword\n    });\n  }\n\n  deleteUser(user) {\n    this.registeredUsers = this.registeredUsers.filter(\n      item => item.id != user.id\n    );\n    this.add_form = true;\n    this.registerForm.reset();\n  }\n\n  cancelForm() {\n    this.add_form = true;\n    this.registerForm.reset();\n    this.editedUser = {};\n  }\n\n  changeVal1(eve) {\n    console.log(eve);\n  }\n\n  changeVal2(eve) {\n    console.log(eve);\n  }\n}\n","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">{{name}}</div>\\n  <div *ngIf=\\\"add_form\\\">\\n    <button id=\\\"add\\\" (click)=\\\"addUser()\\\">Add User</button>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"registerForm\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>First Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.firstName.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.firstName.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.firstName.errors.required\\\">First Name is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Last Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.lastName.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.lastName.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.lastName.errors.required\\\">Last Name is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" [email]=\\\"true\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.email.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.email.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.email.errors.required\\\">Email is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.email.errors.email\\\">Enter a valid email</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Phone</label>\\n        <input type=\\\"number\\\" formControlName=\\\"phone\\\" minlength=\\\"10\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.phone.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.phone.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.phone.errors.required\\\">Phone is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.phone.errors.pattern\\\">Phone is invalid</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Company</label>\\n        <input type=\\\"text\\\" formControlName=\\\"company\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.company.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.company.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.company.errors.required\\\">Company is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Gender</label>\\n        <div>\\n          <input id=\\\"male\\\" type=\\\"radio\\\" value=\\\"male\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n          <label for=\\\"male\\\">Male</label>\\n        </div>\\n        <div>\\n          <input id=\\\"female\\\" type=\\\"radio\\\" value=\\\"female\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n          <label for=\\\"female\\\">Female</label>\\n        </div>\\n        <div *ngIf=\\\"submitted && formValues.gender.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.gender.errors.required\\\">Gender is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>DOB</label>\\n        <input type=\\\"date\\\" formControlName=\\\"dob\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.dob.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.dob.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.dob.errors.required\\\">DOB is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" (blur)=\\\"changeVal2($event.target.value)\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.password.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.password.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.password.errors.required\\\">Password is required\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col\\\">\\n        <label>Confirm Fassword</label>\\n        <input type=\\\"password\\\" (input)=\\\"changeVal1($event.target.value)\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{'is-invalid': submitted && formValues.confirmPassword.errors}\\\">\\n        <div *ngIf=\\\"submitted && formValues.confirmPassword.errors\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.confirmPassword.errors.required\\\">Confirm Password\\n            is required</div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formValues.confirmPassword.errors.mismatch\\\">Password and\\n            Confirm password are not matched</div>\\n        </div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button id=\\\"done\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitForm()\\\">{{add_form ? 'Register' : 'Update'}}</button>\\n        <button id=\\\"Cancel\\\" (click)=\\\"cancelForm()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div *ngIf=\\\"registeredUsers.length > 0\\\">\\n    <table>\\n      <tr>\\n        <th>First name</th>\\n        <th>Last name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Company</th>\\n        <th>DOB</th>\\n        <th>Edit</th>\\n        <th>Delete</th>\\n      </tr>\\n      <tr *ngFor=\\\"let user of registeredUsers; let i=index;\\\">\\n        <td>{{ user.firstName }}</td>\\n        <td>{{ user.lastName }}</td>\\n        <td>{{ user.email }}</td>\\n        <td>{{ user.phone }}</td>\\n        <td>{{ user.company }}</td>\\n        <td>{{ user.dob }}</td>\\n        <td>\\n          <button id=\\\"edi\\\" (click)=\\\"editUser(user)\\\">Edit</button>\\n        </td>\\n        <td>\\n          <button id=\\\"del\\\" (click)=\\\"deleteUser(user)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HelloComponent } from './hello.component';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule],\n  declarations: [AppComponent, HelloComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  \n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  \n}).catch(err => console.error(err));"]}